{"version":3,"sources":["Rectangle.js","SingleSelect.js","CreateRectangles.js","SortingAlgorithms/MergeSortSwitch.js","SortingAlgorithms/MergeSortPut.js","SortingAlgorithms/QuickSort.js","App.js","SortingAlgorithms/BubbleSort.js","serviceWorker.js","index.js","favicon.ico"],"names":["Rectangle","props","rectangleStyle","width","height","margin","backgroundColor","color","className","style","bottom","displayHeight","useStyles","makeStyles","theme","formControl","spacing","minWidth","SingleSelect","classes","React","useState","open","setOpen","FormControl","InputLabel","htmlFor","title","Select","onClose","onOpen","value","onChange","event","target","inputProps","id","MenuItem","items","map","item","CreateRectangles","rectNum","data","lightUp","maxWidth","Math","floor","rects","i","undefined","rect","includes","push","key","MergeSortSwitch","arr","setSteps","setStepsCounter","setTotalSteps","copy","steps","mergeSortDivide","l","r","m","start","mid","end","start2","index","mergeSortConquer","length","MergeSortPut","mergeSort","location","left","slice","right","res","j","merge","QuickSort","quickSortR","pi","firstVal","lastVal","med","middleVal","pivot","a","b","c","max","min","loc","tmpRect","tmp","partition","Rainbow","require","createMuiTheme","palette","primary","light","main","dark","secondary","Rect","this","App","button","window","addEventListener","setMaxWidth","innerWidth","rainbow","setSpectrum","maxData","sortType","setSortType","setRectNum","speed","setSpeed","setData","Array","fill","dataBottom","setDataBottom","totalSteps","stepsCounter","setLightUp","lightUpBottom","setLightUpBottom","sorting","setSorting","createData","heights","maxRectHeight","round","random","sort","getData","newGradient","setNumberRange","colourAt","updateGradient","x","shuffle","reset","timer","instruction","copyData","copyDataBottom","toPut","toLightUp","y","Sort","BubbleSort","useEffect","setInterval","clearInterval","Button","variant","onClick","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ffa166ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Rectangle.css'\r\n\r\n\r\nexport default function Rectangle(props){\r\n    // var color = \"#86C232\";\r\n    // if(props.color){\r\n    //     color = \"#32C2AA\";\r\n    // }\r\n    var rectangleStyle = {\r\n        width: props.width,\r\n        height: props.height,\r\n        margin: props.margin,\r\n        backgroundColor: props.color,\r\n    }\r\n\r\n    var labelStyle = {\r\n        //left: Math.round(props.width/5),\r\n        bottom: 12,\r\n    }\r\n\r\n    return (\r\n        <span className=\"rectangle\" style={rectangleStyle}>\r\n            <div className=\"label\" style={labelStyle}>\r\n                {props.displayHeight} \r\n                {/* {props.color} */}\r\n            </div>\r\n        </span>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SingleSelect(props) {\r\n    const classes = useStyles();\r\n    // const [title, setTitle] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    function handleChange(event) {\r\n      //setTitle(event.target.value);\r\n      props.onChange(event.target.value);\r\n    }\r\n  \r\n    function handleClose() {\r\n      setOpen(false);\r\n    }\r\n  \r\n    function handleOpen() {\r\n      setOpen(true);\r\n    }\r\n  \r\n    return (\r\n        \r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor={props.title}>{props.title}</InputLabel>\r\n                <Select\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={props.value}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        title: props.title,\r\n                        id: props.title,\r\n                    }}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.items.map(item => (\r\n                        <MenuItem value={item}>{item}</MenuItem>\r\n\r\n                    ))}\r\n                    {/* <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n            </FormControl>\r\n  \r\n    );\r\n  }\r\n\r\n\r\n  export default SingleSelect;","import React from 'react';\r\nimport Rectangle from './Rectangle.js';\r\n// import './Rectangle.css'\r\n\r\n\r\nexport default function CreateRectangles(props){\r\n    // var style = {\r\n    //     width: props.width,\r\n    //     height: props.height,\r\n    //     margin: props.margin,\r\n    // }\r\n    var rectNum = props.rectNum;\r\n    var data = props.data;\r\n    var lightUp = props.lightUp;\r\n    var maxWidth = props.maxWidth;\r\n\r\n    \r\n    var margin = 0.5;\r\n    var width = Math.floor(maxWidth/rectNum);\r\n\r\n    var rects = [];\r\n\r\n    for(var i = 0; i < rectNum; ++i){\r\n        if (data === undefined || data[i] === undefined) {\r\n            continue;\r\n        }\r\n        //console.log(i);\r\n        var rect = data[i];\r\n        var height = rect.height;\r\n        var width = width;\r\n        var color = rect.color;\r\n        var displayHeight = height;\r\n        if (height == 0) {\r\n            displayHeight = \"\";\r\n        }\r\n        //props.lightUp.includes(i)\r\n        if (lightUp.includes(i)){\r\n            //console.log(i, props.lightUp);\r\n            rects.push(<Rectangle key={i} width={width} height={height} margin={margin} displayHeight={displayHeight} color={color}/>);\r\n            \r\n        } else {\r\n            rects.push(<Rectangle key={i} width={width} height={height} margin={margin} displayHeight={displayHeight} color={color}/>);\r\n        }\r\n    }\r\n\r\n    return <span> {rects} </span>;\r\n}","// MergeSort\r\n\r\nexport default function MergeSortSwitch(arr, setSteps, setStepsCounter, setTotalSteps){\r\n    //IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n    //YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n    let copy = [...arr];\r\n    //var stepsCounter = 0;\r\n    var steps = [];\r\n\r\n    mergeSortDivide(copy, 0, copy.length-1, steps);\r\n\r\n\r\n    //console.log(copy);\r\n    setSteps(steps);\r\n    setStepsCounter(steps.length);\r\n    setTotalSteps(steps.length);\r\n}\r\n\r\nfunction mergeSortDivide(arr, l, r, steps){\r\n    if(l < r){\r\n        var m = Math.floor((l+r) / 2);\r\n        mergeSortDivide(arr, l, m, steps);\r\n        mergeSortDivide(arr, m + 1, r, steps);\r\n\r\n        mergeSortConquer(arr, l, m, r, steps);\r\n    }\r\n}\r\n\r\nfunction mergeSortConquer(arr, start, mid, end, steps){\r\n    var start2 = mid + 1;\r\n\r\n    if(arr[mid].height <= arr[start2].height){\r\n        return;\r\n    }\r\n\r\n    while(start <= mid && start2 <= end) {\r\n        if(arr[start].height <= arr[start2].height){\r\n            ++start;\r\n        } else {\r\n            var value = arr[start2];\r\n            var index = start2;\r\n            while(index != start) {\r\n                arr[index] = arr[index - 1];\r\n                steps.push(['s',index,index - 1]);\r\n                --index;\r\n            }\r\n            arr[start] = value;\r\n\r\n            ++start;\r\n            ++mid;\r\n            ++start2;\r\n        }\r\n    }\r\n}","// MergeSort\r\n\r\nexport default function MergeSortPut(arr, setSteps, setStepsCounter, setTotalSteps) {\r\n\t//IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n\t//YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n\tlet copy = [...arr];\r\n\t//var stepsCounter = 0;\r\n\tvar steps = [];\r\n\r\n\tmergeSort(copy, 0, steps);\r\n\r\n\r\n\t//console.log(steps);\r\n\tsetSteps(steps);\r\n\tsetStepsCounter(steps.length);\r\n\tsetTotalSteps(steps.length);\r\n}\r\n\r\nfunction merge(left, right, location, steps) {\r\n\tvar res = [];\r\n\tvar i = 0, j = 0;\r\n\r\n\twhile (true) {\r\n\t\tif (i >= left.length) {\r\n\t\t\t// [\"instruction\", index, toPut]\r\n\t\t\t// \"pa2\" stands for \"put array 2\"\r\n\t\t\t// put the array toPut at index,\r\n\t\t\t// overwriting what is there without increasing original array length\r\n\t\t\tsteps.push([\"pa2\", res.length + location, right.slice(j)]);\r\n\t\t\tres.push(...right.slice(j));\r\n\t\t\tbreak;\r\n\t\t} else if (j >= right.length) {\r\n\t\t\tsteps.push([\"pa2\", res.length + location, left.slice(i)]);\r\n\t\t\tres.push(...left.slice(i));\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (left[i].height < right[j].height) {\r\n\t\t\t// [\"instruction\", index, toPut]\r\n\t\t\t// \"p2\" stands for \"put 2\"\r\n\t\t\t// put what is at toPut at the index of heightsBottom \r\n\t\t\tsteps.push([\"p2\", res.length + location, left[i]]);\r\n\t\t\tres.push(left[i]);\r\n\t\t\t++i;\r\n\t\t} else {\r\n\t\t\tsteps.push([\"p2\", res.length + location, right[j]]);\r\n\t\t\tres.push(right[j]);\r\n\t\t\t++j;\r\n\t\t}\r\n\r\n\t}\r\n\t// put the whole sorted array into the original data\r\n\tsteps.push([\"pa\", location, res]);\r\n\treturn res;\r\n}\r\n\r\n//range is [start,end)\r\nfunction mergeSort(arr, location, steps) {\r\n\t//console.log({ arr });\r\n\tif (arr.length == 1 || arr.length == 0) {\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tvar mid = Math.floor((0 + arr.length) / 2);\r\n\tvar left = mergeSort(arr.slice(0, mid), location, steps);\r\n\tvar right = mergeSort(arr.slice(mid, arr.length), location+mid, steps);\r\n\r\n\treturn merge(left, right, location, steps);\r\n}","// QuickSort\r\n\r\nexport default function QuickSort(arr, setSteps, setStepsCounter, setTotalSteps) {\r\n\t//IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n\t//YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n\tlet copy = [...arr];\r\n\t//var stepsCounter = 0;\r\n\tvar steps = [];\r\n\r\n\tquickSortR(copy, 0, copy.length - 1, steps);\r\n\r\n\r\n\t//console.log(steps);\r\n\tsetSteps(steps);\r\n\tsetStepsCounter(steps.length);\r\n\tsetTotalSteps(steps.length);\r\n}\r\n\r\nfunction quickSortR(arr, start, end, steps){\r\n    if (start < end){\r\n        var pi = partition(arr, start, end, steps);\r\n\r\n        quickSortR(arr, start, pi - 1, steps);\r\n        quickSortR(arr, pi + 1, end, steps);\r\n    }\r\n}\r\n\r\nfunction partition(arr, start, end, steps){\r\n    // Take a value to pivot around\r\n    var firstVal = arr[start].height;\r\n    var lastVal = arr[end].height;\r\n    var med = Math.floor((start + end) / 2);\r\n    var middleVal = arr[med].height;\r\n\r\n    var pivot = median(firstVal, lastVal, middleVal);\r\n    var loc = (pivot == firstVal) ? start : (pivot == lastVal) ? end : med;\r\n    steps.push(['s', loc, end]);\r\n    var tmpRect = arr[loc]\r\n    arr[loc] = arr[end];\r\n    arr[end] = tmpRect;\r\n\r\n    // Only pivot the last element\r\n    // var pivot = arr[end].height;\r\n    // var tmpRect = arr[end];\r\n\r\n    var i = start;\r\n\r\n    for (var j = start; j < end; ++j) {\r\n        // console.log([arr[j].height, pivot, i , j]);\r\n        if (arr[j].height < pivot) {\r\n            if (i != j) {\r\n                steps.push(['s', i, j]);\r\n                let tmp = arr[j];\r\n                arr[j] = arr[i];\r\n                arr[i] = tmp;\r\n            }\r\n            ++i;\r\n        }\r\n    }\r\n\r\n    steps.push(['s', i, end]);\r\n    arr[end] = arr[i];\r\n    arr[i] = tmpRect;\r\n    return i;\r\n\r\n}\r\n\r\n// Find the median of three values\r\nfunction median(a, b, c){\r\n    return (a+b+c) - Math.max(a,b,c) - Math.min(a,b,c);\r\n}","import React, { useEffect } from 'react';\nimport logo from './favicon.ico';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport './App.css';\n\nimport Rectangle from './Rectangle.js';\nimport SingleSelect from './SingleSelect.js';\nimport CreateRectangles from './CreateRectangles.js';\n\nimport BubbleSort from './SortingAlgorithms/BubbleSort.js';\nimport MergeSortSwitch from './SortingAlgorithms/MergeSortSwitch.js';\nimport MergeSortPut from './SortingAlgorithms/MergeSortPut.js';\nimport QuickSort from './SortingAlgorithms/QuickSort.js';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { createDeflate } from 'zlib';\n\nvar Rainbow = require('rainbowvis.js');\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: '#98d049',\n\t\t\tmain: '#86C232',\n\t\t\tdark: '#70a22a',\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: '#12e2e2\"',\n\t\t\tmain: '#32c3c3',\n\t\t\tdark: '#43b1b1',\n\t\t}\n\t},\n\n})\n\nclass Rect {\n\tconstructor(height,color) {\n\t\tthis.height = height;\n\t\tthis.color = color;\n\t}\n}\n\n/**\n * Shuffles array in place.\n * @param {Array} a items An array containing the items.\n * From StackOverflow\n */\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\nfunction getData(rectNum, maxRectHeight) {\n\tvar res = [];\n\tfor (var i = 0; i < rectNum; ++i) {\n\t\tres.push(1 + Math.round(Math.random() * maxRectHeight));\n\t}\n\tres.sort(function(a, b){return a-b});\n\t//console.log(res);\n\treturn res;\n}\n\n\n// Goal: To create a visual realization of sorting algorithms.\n// Create rectangles as data points.\n// 1. Line up rectangles at the bottom\n// 2. The heights of rectangles is based on their data\n// 3. Using whatever sorting algorithm, show step by step how the data transforms\n\nfunction App() {\n\n\tconst useStyles = makeStyles(theme => ({\n\t\tbutton: {\n\t\t\t// background: '#86C232',\n\t\t\tmargin: \"5px\",\n\t\t\tcolor: \"white\",\n\t\t}\n\t}));\n\n\twindow.addEventListener(\"resize\", updateWidth);\n\n\tvar rainbow = new Rainbow();\n\trainbow.setSpectrum('#ffffff', \"#86C232\", \"#32c3c3\");\n\t\n\t\n\n\t//const maxWidth = 1200;\n\tvar maxData = 200;\n\tconst [maxWidth, setMaxWidth] = React.useState(window.innerWidth * 0.7);\n\n\n\t// filters, set default values\n\tconst [sortType, setSortType] = React.useState(\"QuickSort\");\n\tconst [rectNum, setRectNum] = React.useState(25);\n\tconst [speed, setSpeed] = React.useState(1);\n\n\t// data tracking\n\tconst [data, setData] = React.useState([]);\n\tconst [dataBottom, setDataBottom] = React.useState(new Array(rectNum).fill(0));\n\tconst [steps, setSteps] = React.useState([]);\n\tconst [totalSteps, setTotalSteps] = React.useState(0);\n\tconst [stepsCounter, setStepsCounter] = React.useState(0);\n\tconst [lightUp, setLightUp] = React.useState([]);\n\tconst [lightUpBottom, setLightUpBottom] = React.useState([]);\n\tconst [sorting, setSorting] = React.useState(false);\n\n\n\n\tfunction updateWidth() {\n\t\tsetMaxWidth(window.innerWidth * 0.7);\n\t}\n\n\tfunction updateGradient() {\n\t\trainbow.setNumberRange(0, rectNum); \n\t\tvar res = [];\n\t\tfor(var i = 0; i < rectNum; ++i) {\n\t\t\tres.push(\"#\" + rainbow.colourAt(i));\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction createData(){\n\t\t//console.log(rectNum);\n\t\tvar heights = getData(rectNum, maxData);\n\t\tvar newGradient = updateGradient();\n\t\tvar res = [];\n\t\tfor(var i = 0; i < rectNum; ++i){\n\t\t\tlet tmp = new Rect(heights[i], newGradient[i]);\n\t\t\tres.push(tmp);\n\t\t}\n\n\t\tres = shuffle(res);\n\t\t// console.log(JSON.stringify(res));\n\t\t// setGradient(newGradient);\n\t\tsetData(res);\n\t}\n\n\n\tfunction reset(){\n\t\tsetSorting(false);\n\t\tsetDataBottom(new Array(rectNum).fill(new Rect(0,Math.round(maxWidth/rectNum),0)));\n\t\tsetLightUp([]);\n\t\tsetLightUpBottom([]);\n\n\t}\n\n\tfunction timer() {\n\t\t// console.log(steps);\n\t\t// console.log(totalSteps);\n\t\t// console.log(stepsCounter);\n\n\t\tlet index = totalSteps - stepsCounter;\n\t\tlet instruction = steps[index][0];\n\t\tlet copyData = [...data]\n\t\tlet copyDataBottom = [...dataBottom]\n\n\t\tif (instruction == 's') {\n\t\t\t// Switch:\n\t\t\t// [\"instruction\", index1, index2]\n\t\t\t// Switch what is at index1 with index2\n\t\t\tlet a = steps[index][1];\n\t\t\tlet b = steps[index][2];\n\n\t\t\tlet tmp = copyData[a];\n\t\t\tcopyData[a] = copyData[b];\n\t\t\tcopyData[b] = tmp;\n\t\t\t\n\t\t\tsetLightUp([a, b]);\n\t\t} else if (instruction == 'p') {\n\t\t\t// Put:\n\t\t\t// [\"instruction\", index, toPut]\n\t\t\t// Put what is toPut at index, replacing old element\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyData[location] = toPut;\n\n\t\t\tsetLightUp([location]);\n\t\t} else if (instruction == 'p2') {\n\t\t\t// Put Bottom:\n\t\t\t// [\"instruction\", index, toPut]\n\t\t\t// Put what is toPut at second graph's index, replacing old element\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyDataBottom[location] = toPut;\n\t\t\tsetLightUpBottom([location]);\n\t\t} else if (instruction == 'pa') {\n\t\t\t// Put Array:\n\t\t\t// [\"instruction\", index, toPut[]]\n\t\t\t// Put what is toPut[] at index, replacing old elements\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyData = [\n\t\t\t\t...copyData.slice(0,location),\n\t\t\t\t...toPut,\n\t\t\t\t...copyData.slice(location + toPut.length)\n\t\t\t];\n\t\t\t\n\t\t\t// generate an array from starting location with length identical to toPut\n\t\t\tlet toLightUp = Array(toPut.length).fill(location).map((x, y) => x + y);\n\t\t\tsetLightUp(toLightUp);\n\t\t} else if (instruction == 'pa2') {\n\t\t\t// Put Bottom Array:\n\t\t\t// [\"instruction\", index, toPut[]]\n\t\t\t// Put what is toPut[] at second graph's index, replacing old elements\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyDataBottom = [\n\t\t\t\t...copyDataBottom.slice(0,location),\n\t\t\t\t...toPut,\n\t\t\t\t...copyDataBottom.slice(location + toPut.length)\n\t\t\t];\n\t\t\t\n\t\t\tlet toLightUp = Array(toPut.length).fill(location).map((x, y) => x + y);\n\t\t\tsetLightUpBottom(toLightUp);\n\t\t}\n\n\t\t// console.log(copyData);\n\t\tsetData(copyData);\n\t\tsetDataBottom(copyDataBottom);\n\t\tsetStepsCounter(stepsCounter - 1);\n\t};\n\n\tuseEffect(() => {\n\t\tif (stepsCounter <= 0 || !sorting) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = setInterval(timer, speed);\n\t\treturn () => clearInterval(id);\n\t},\n\t\t[stepsCounter, sorting]\n\t);\n\n\tuseEffect(() => {\n\t\t// setGradient(updateGradient());\n\t\t// setData(createData());\t\t\n\t\tcreateData();\n\t},\n\t\t[rectNum]\n\t);\n\n\tfunction Sort(heights, setSteps, setStepsCounter, setTotalSteps) {\n\t\tsetSorting(true);\n\t\tif (sortType == \"BubbleSort\") {\n\t\t\tBubbleSort(heights, setSteps, setStepsCounter, setTotalSteps);\n\t\t} else if (sortType == \"MergeSort(Switch)\") {\n\t\t\tMergeSortSwitch(heights, setSteps, setStepsCounter, setTotalSteps);\n\t\t} else if (sortType == \"MergeSort(Put)\") {\n\t\t\tMergeSortPut(heights, setSteps, setStepsCounter, setTotalSteps);\n\t\t} else if (sortType == \"QuickSort\") {\n\t\t\tQuickSort(heights, setSteps, setStepsCounter, setTotalSteps);\n\t\t}\n\t}\n\n\tconst classes = useStyles();\n\treturn (\n\t\t<MuiThemeProvider theme={theme}>\n\n\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"App-header\">\n\t\t\t\t\t{/* <img src={logo} alt=\"Logo\" style={{width:80, height:80}}/> */}\n\t\t\t\t\t{/* {JSON.stringify(maxWidth)} */}\n\t\t\t\t\t<SingleSelect\n\t\t\t\t\t\ttitle={\"Type of Sort\"}\n\t\t\t\t\t\titems={[\"BubbleSort\", \"MergeSort(Switch)\", \"MergeSort(Put)\", \"QuickSort\"]}\n\t\t\t\t\t\tvalue={sortType}\n\t\t\t\t\t\tonChange={(sortType) => { reset(); setSortType(sortType); }}\n\t\t\t\t\t/>\n\t\t\t\t\t<SingleSelect\n\t\t\t\t\t\ttitle={\"Data Points\"}\n\t\t\t\t\t\titems={[10, 25, 50, 100]}\n\t\t\t\t\t\tvalue={rectNum}\n\t\t\t\t\t\tonChange={(rectNum) => { reset(); setRectNum(rectNum); }}\n\t\t\t\t\t/>\n\t\t\t\t\t<SingleSelect\n\t\t\t\t\t\ttitle={\"Speed(ms)\"}\n\t\t\t\t\t\titems={[1, 10, 100, 500]}\n\t\t\t\t\t\tvalue={speed}\n\t\t\t\t\t\tonChange={(speed) => { reset(); setSpeed(speed); }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={() => { reset(); createData(); }}\n\t\t\t\t\t>\n\t\t\t\t\t\tRandomize\n          \t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={() => Sort(data, setSteps, setStepsCounter, setTotalSteps)}\n\t\t\t\t\t>\n\t\t\t\t\t\tSort\n          \t\t\t</Button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"App-main\">\n\t\t\t\t\t\n\t\t\t\t\t{/* <Clock></Clock> */}\n\t\t\t\t\t<CreateRectangles\n\t\t\t\t\t\trectNum={rectNum}\n\t\t\t\t\t\tmaxWidth={maxWidth}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tlightUp={lightUp}\n\t\t\t\t\t>\n\t\t\t\t\t</CreateRectangles>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"App-main\">\n\t\t\t\t\t{/* <Clock></Clock> */}\n\t\t\t\t\t<CreateRectangles\n\t\t\t\t\t\trectNum={rectNum}\n\t\t\t\t\t\tmaxWidth={maxWidth}\n\t\t\t\t\t\tdata={dataBottom}\n\t\t\t\t\t\tlightUp={lightUpBottom}\n\t\t\t\t\t>\n\t\t\t\t\t</CreateRectangles>\n\n\t\t\t\t</div>\n\t\t\t\t{/* {JSON.stringify(steps)} */}\n\n\n\t\t\t</div>\n\n\t\t</MuiThemeProvider>\n\t);\n}\n\nexport default App;\n","// BubbleSort\r\n\r\nexport default function BubbleSort(arr, setSteps, setStepsCounter, setTotalSteps){\r\n    //IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n    //YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n    let copy = [...arr];\r\n\r\n    //var stepsCounter = 0;\r\n    var steps = [];\r\n\r\n    for(var j = 0; j < copy.length - 1;++j){\r\n        for(var i = 0; i < copy.length-1-j; ++i){\r\n            if(copy[i].height > copy[i+1].height){\r\n                var tmp = copy[i];\r\n                copy[i] = copy[i+1];\r\n                copy[i+1] = tmp;\r\n                \r\n                //++stepsCounter;\r\n                steps.push(['s',i,i+1]);\r\n\r\n            }\r\n        }\r\n    }\r\n    // console.log(copy);\r\n    setSteps(steps);\r\n    setStepsCounter(steps.length);\r\n    setTotalSteps(steps.length);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/favicon.ad79fbfb.ico\";"],"sourceRoot":""}