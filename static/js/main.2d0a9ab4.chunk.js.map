{"version":3,"sources":["Rectangle.js","SingleSelect.js","CreateRectangles.js","MergeSortSwitch.js","App.js","BubbleSort.js","serviceWorker.js","index.js"],"names":["Rectangle","props","color","style","width","height","margin","backgroundColor","className","data","useStyles","makeStyles","theme","formControl","spacing","minWidth","SingleSelect","classes","React","useState","open","setOpen","FormControl","InputLabel","htmlFor","title","Select","onClose","onOpen","value","onChange","event","target","inputProps","id","MenuItem","items","map","item","CreateRectangles","rectNum","maxWidth","heights","rects","i","lightUp","includes","console","log","push","MergeSortSwitch","arr","setSteps","setStepsCounter","setTotalSteps","copy","steps","mergeSortDivide","l","r","m","Math","floor","start","mid","end","start2","index","mergeSortConquer","length","createMuiTheme","palette","primary","light","main","dark","secondary","getHeights","maxRectHeight","res","round","random","App","button","background","sortType","setSortType","setRectNum","speed","setSpeed","setHeights","totalSteps","stepsCounter","setLightUp","timer","a","b","tmp","Sort","j","BubbleSort","useEffect","setInterval","clearInterval","Button","variant","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d0a9ab4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Rectangle.css'\r\n\r\n\r\nexport default function Rectangle(props){\r\n    var color = \"#86C232\";\r\n    if(props.color){\r\n        color = \"#61892F\";\r\n    }\r\n    var style = {\r\n        width: props.width,\r\n        height: props.height,\r\n        margin: props.margin,\r\n        backgroundColor: color,\r\n    }\r\n\r\n    return <span className=\"rectangle\" style={style}> {props.data} </span>\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SingleSelect(props) {\r\n    const classes = useStyles();\r\n    // const [title, setTitle] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    function handleChange(event) {\r\n      //setTitle(event.target.value);\r\n      props.onChange(event.target.value);\r\n    }\r\n  \r\n    function handleClose() {\r\n      setOpen(false);\r\n    }\r\n  \r\n    function handleOpen() {\r\n      setOpen(true);\r\n    }\r\n  \r\n    return (\r\n        \r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor={props.title}>{props.title}</InputLabel>\r\n                <Select\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={props.value}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        title: props.title,\r\n                        id: props.title,\r\n                    }}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.items.map(item => (\r\n                        <MenuItem value={item}>{item}</MenuItem>\r\n\r\n                    ))}\r\n                    {/* <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n            </FormControl>\r\n  \r\n    );\r\n  }\r\n\r\n\r\n  export default SingleSelect;","import React from 'react';\r\nimport Rectangle from './Rectangle.js';\r\n// import './Rectangle.css'\r\n\r\n\r\nexport default function CreateRectangles(props){\r\n    // var style = {\r\n    //     width: props.width,\r\n    //     height: props.height,\r\n    //     margin: props.margin,\r\n    // }\r\n    var rectNum = props.rectNum;\r\n    var maxWidth = props.maxWidth;\r\n    var heights = props.heights;\r\n\r\n    var width = maxWidth/rectNum;\r\n    var margin = 1;\r\n\r\n    var rects = [];\r\n\r\n    for(var i = 0; i < rectNum; ++i){\r\n        var height = heights[i];\r\n        //alert(height);\r\n        if (props.lightUp.includes(i)){\r\n            console.log(i, props.lightUp);\r\n            rects.push(<Rectangle width={width} height={height} margin={margin} data={height} color={true}/>);\r\n            \r\n        } else {\r\n            rects.push(<Rectangle width={width} height={height} margin={margin} data={height}/>);\r\n        }\r\n    }\r\n\r\n    return <span> {rects} </span>;\r\n}","// MergeSort\r\n\r\nexport default function MergeSortSwitch(arr, setSteps, setStepsCounter, setTotalSteps){\r\n    //IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n    //YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n    let copy = [...arr];\r\n    //var stepsCounter = 0;\r\n    var steps = [];\r\n\r\n    mergeSortDivide(copy, 0, copy.length-1, steps);\r\n\r\n\r\n    //console.log(copy);\r\n    setSteps(steps);\r\n    setStepsCounter(steps.length);\r\n    setTotalSteps(steps.length);\r\n}\r\n\r\nfunction mergeSortDivide(arr, l, r, steps){\r\n    if(l < r){\r\n        var m = Math.floor((l+r) / 2);\r\n        mergeSortDivide(arr, l, m, steps);\r\n        mergeSortDivide(arr, m + 1, r, steps);\r\n\r\n        mergeSortConquer(arr, l, m, r, steps);\r\n    }\r\n}\r\n\r\nfunction mergeSortConquer(arr, start, mid, end, steps){\r\n    var start2 = mid + 1;\r\n\r\n    if(arr[mid] <= arr[start2]){\r\n        return;\r\n    }\r\n\r\n    while(start <= mid && start2 <= end) {\r\n        if(arr[start] <= arr[start2]){\r\n            ++start;\r\n        } else {\r\n            var value = arr[start2];\r\n            var index = start2;\r\n            while(index != start) {\r\n                arr[index] = arr[index - 1];\r\n                steps.push(['s',index,index - 1]);\r\n                --index;\r\n            }\r\n            arr[start] = value;\r\n\r\n            ++start;\r\n            ++mid;\r\n            ++start2;\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\n// import logo from './logo.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport './App.css';\n\nimport Rectangle from './Rectangle.js';\nimport SingleSelect from './SingleSelect.js';\nimport CreateRectangles from './CreateRectangles.js';\n\nimport BubbleSort from './BubbleSort.js';\nimport MergeSortSwitch from './MergeSortSwitch.js';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#86C232',\n        main: '#86C232',\n        dark: '#86C232',\n      },\n      secondary: {\n        light: '#474B4F',\n        main: '#474B4F',\n        dark: '#474B4F',\n      }\n    },\n      \n})\n// Goal: To create a visual realization of sorting algorithms.\n// Create rectangles as data points.\n// 1. Line up rectangles at the bottom\n// 2. Array of heights should be the state of the main program\n\n\nfunction getHeights(rectNum, maxRectHeight){\n  var res = [];\n  for(var i = 0; i < rectNum; ++i){\n    res.push(Math.round(Math.random() * maxRectHeight));\n  }\n  //console.log(res);\n  return res;\n}\n\n\n\n\nfunction App() {\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n        background: '#86C232',\n        margin: \"5px\",\n        color: \"white\",\n    }\n}));\n  // const maxWidth = window.innerWidth;\n  const maxWidth = 1200;\n  var maxRectHeight = 200;\n\n\n  // filters\n  const [sortType, setSortType] = React.useState(\"BubbleSort\");\n  const [rectNum, setRectNum] = React.useState(50);\n  const [speed, setSpeed] = React.useState(1);\n\n  // data tracking\n  const [heights, setHeights] = React.useState(getHeights(rectNum,maxRectHeight));\n  const [steps, setSteps] = React.useState([]);\n  const [totalSteps, setTotalSteps] = React.useState(0);\n  const [stepsCounter, setStepsCounter] = React.useState(0);\n  const [lightUp, setLightUp] = React.useState([]);\n\n\n  function timer(){\n    // console.log(steps);\n    // console.log(totalSteps);\n    // console.log(stepsCounter);\n\n    let index = totalSteps - stepsCounter;\n\n    if(steps[index][0] == 's'){\n      let a = steps[index][1];\n      let b = steps[index][2];\n\n      let tmp = heights[a];\n      heights[a] = heights[b];\n      heights[b] = tmp;\n\n      setLightUp([a,b]);\n    } else if(steps[index][0] == 'p'){\n      let a = steps[index][1];\n      let b = steps[index][2];\n\n      heights[a] = b;\n\n      setLightUp([a]);\n    }\n\n    \n    setHeights(heights);\n    setStepsCounter(stepsCounter - 1);\n  };\n\n  useEffect(() => {\n      if (stepsCounter <= 0) {\n          return;\n      }\n      const id = setInterval(timer, speed);\n      return () => clearInterval(id);\n      },\n      [stepsCounter]\n  );\n\n  useEffect(() => {\n    setHeights(getHeights(rectNum,maxRectHeight));\n    },\n    [rectNum]\n  );\n\n  function Sort(heights, setSteps, setStepsCounter, setTotalSteps){\n    if(sortType == \"BubbleSort\"){\n      BubbleSort(heights, setSteps, setStepsCounter, setTotalSteps);\n    } else if(sortType == \"MergeSort(Switch)\"){\n      MergeSortSwitch(heights, setSteps, setStepsCounter, setTotalSteps);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <MuiThemeProvider theme={theme}>\n\n      \n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={() => setHeights(getHeights(rectNum,maxRectHeight))}\n          >\n            Randomize\n          </Button>\n          <SingleSelect \n            title={\"Type of Sort\"}\n            items={[\"BubbleSort\", \"MergeSort(Switch)\", \"MergeSort(Put)\", \"HeapSort\"]}\n            value={sortType}\n            onChange={(sortType) => setSortType(sortType)}\n          />\n          <SingleSelect \n            title={\"Data Points\"}\n            items={[10, 25, 50, 100]}\n            value={rectNum}\n            onChange={(rectNum) => setRectNum(rectNum)}\n          />\n          <SingleSelect \n            title={\"Speed(ms)\"}\n            items={[1, 50, 100, 500]}\n            value={speed}\n            onChange={(speed) => setSpeed(speed)}\n          />\n          <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={() => Sort(heights, setSteps, setStepsCounter, setTotalSteps)}\n          >\n            Sort\n          </Button>\n        </div>\n        <div className=\"App-main\">\n          {/* <Clock></Clock> */}\n          <CreateRectangles\n            rectNum={rectNum}\n            maxWidth={maxWidth} \n            heights={heights}\n            lightUp={lightUp}\n          >\n          </CreateRectangles>\n          \n        </div>\n        {/* {JSON.stringify(heights)} */}\n\n\n      </div>\n          \n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// BubbleSort\r\n\r\nexport default function BubbleSort(arr, setSteps, setStepsCounter, setTotalSteps){\r\n    //IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n    //YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n    let copy = [...arr];\r\n\r\n    //var stepsCounter = 0;\r\n    var steps = [];\r\n\r\n    for(var j = 0; j < copy.length - 1;++j){\r\n        for(var i = 0; i < copy.length-1-j; ++i){\r\n            if(copy[i] > copy[i+1]){\r\n                var tmp = copy[i];\r\n                copy[i] = copy[i+1];\r\n                copy[i+1] = tmp;\r\n                \r\n                //++stepsCounter;\r\n                steps.push(['s',i,i+1]);\r\n\r\n            }\r\n        }\r\n    }\r\n    //console.log(copy);\r\n    setSteps(steps);\r\n    setStepsCounter(steps.length);\r\n    setTotalSteps(steps.length);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}