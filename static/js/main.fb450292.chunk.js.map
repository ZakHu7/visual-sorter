{"version":3,"sources":["Rectangle.js","SingleSelect.js","CreateRectangles.js","MergeSortSwitch.js","MergeSortPut.js","App.js","BubbleSort.js","serviceWorker.js","index.js"],"names":["Rectangle","props","color","rectangleStyle","width","height","margin","backgroundColor","className","style","bottom","data","useStyles","makeStyles","theme","formControl","spacing","minWidth","SingleSelect","classes","React","useState","open","setOpen","FormControl","InputLabel","htmlFor","title","Select","onClose","onOpen","value","onChange","event","target","inputProps","id","MenuItem","items","map","item","CreateRectangles","rectNum","maxWidth","heights","Math","round","rects","i","lightUp","includes","push","MergeSortSwitch","arr","setSteps","setStepsCounter","setTotalSteps","copy","steps","mergeSortDivide","l","r","m","floor","start","mid","end","start2","index","mergeSortConquer","length","MergeSortPut","mergeSort","location","left","slice","right","res","j","merge","createMuiTheme","palette","primary","light","main","dark","secondary","getData","maxRectHeight","random","App","button","background","window","addEventListener","setMaxWidth","innerWidth","sortType","setSortType","setRectNum","speed","setSpeed","setData","Array","fill","dataBottom","setDataBottom","totalSteps","stepsCounter","setLightUp","lightUpBottom","setLightUpBottom","sorting","setSorting","reset","timer","instruction","copyData","copyDataBottom","a","b","tmp","toPut","toLightUp","x","y","Sort","BubbleSort","useEffect","setInterval","clearInterval","Button","variant","onClick","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb450292.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Rectangle.css'\r\n\r\n\r\nexport default function Rectangle(props){\r\n    var color = \"#86C232\";\r\n    if(props.color){\r\n        color = \"#32C2AA\";\r\n    }\r\n    var rectangleStyle = {\r\n        width: props.width,\r\n        height: props.height,\r\n        margin: props.margin,\r\n        backgroundColor: color,\r\n    }\r\n\r\n    var labelStyle = {\r\n        //left: Math.round(props.width/5),\r\n        bottom: 12,\r\n    }\r\n\r\n    return (\r\n        <span className=\"rectangle\" style={rectangleStyle}>\r\n            <div className=\"label\" style={labelStyle}>\r\n                {props.data} \r\n            </div>\r\n        </span>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SingleSelect(props) {\r\n    const classes = useStyles();\r\n    // const [title, setTitle] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    function handleChange(event) {\r\n      //setTitle(event.target.value);\r\n      props.onChange(event.target.value);\r\n    }\r\n  \r\n    function handleClose() {\r\n      setOpen(false);\r\n    }\r\n  \r\n    function handleOpen() {\r\n      setOpen(true);\r\n    }\r\n  \r\n    return (\r\n        \r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor={props.title}>{props.title}</InputLabel>\r\n                <Select\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={props.value}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        title: props.title,\r\n                        id: props.title,\r\n                    }}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.items.map(item => (\r\n                        <MenuItem value={item}>{item}</MenuItem>\r\n\r\n                    ))}\r\n                    {/* <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n            </FormControl>\r\n  \r\n    );\r\n  }\r\n\r\n\r\n  export default SingleSelect;","import React from 'react';\r\nimport Rectangle from './Rectangle.js';\r\n// import './Rectangle.css'\r\n\r\n\r\nexport default function CreateRectangles(props){\r\n    // var style = {\r\n    //     width: props.width,\r\n    //     height: props.height,\r\n    //     margin: props.margin,\r\n    // }\r\n    var rectNum = props.rectNum;\r\n    var maxWidth = props.maxWidth;\r\n    var heights = props.heights;\r\n\r\n    var width = Math.round(maxWidth/rectNum);\r\n    var margin = 1;\r\n\r\n    var rects = [];\r\n\r\n    for(var i = 0; i < rectNum; ++i){\r\n        var height = heights[i];\r\n        var data = height;\r\n        if (height == 0) {\r\n            data = \"\";\r\n        }\r\n        //alert(height);\r\n        if (props.lightUp.includes(i)){\r\n            //console.log(i, props.lightUp);\r\n            rects.push(<Rectangle width={width} height={height} margin={margin} data={data} color={true}/>);\r\n            \r\n        } else {\r\n            rects.push(<Rectangle width={width} height={height} margin={margin} data={data}/>);\r\n        }\r\n    }\r\n\r\n    return <span> {rects} </span>;\r\n}","// MergeSort\r\n\r\nexport default function MergeSortSwitch(arr, setSteps, setStepsCounter, setTotalSteps){\r\n    //IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n    //YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n    let copy = [...arr];\r\n    //var stepsCounter = 0;\r\n    var steps = [];\r\n\r\n    mergeSortDivide(copy, 0, copy.length-1, steps);\r\n\r\n\r\n    //console.log(copy);\r\n    setSteps(steps);\r\n    setStepsCounter(steps.length);\r\n    setTotalSteps(steps.length);\r\n}\r\n\r\nfunction mergeSortDivide(arr, l, r, steps){\r\n    if(l < r){\r\n        var m = Math.floor((l+r) / 2);\r\n        mergeSortDivide(arr, l, m, steps);\r\n        mergeSortDivide(arr, m + 1, r, steps);\r\n\r\n        mergeSortConquer(arr, l, m, r, steps);\r\n    }\r\n}\r\n\r\nfunction mergeSortConquer(arr, start, mid, end, steps){\r\n    var start2 = mid + 1;\r\n\r\n    if(arr[mid] <= arr[start2]){\r\n        return;\r\n    }\r\n\r\n    while(start <= mid && start2 <= end) {\r\n        if(arr[start] <= arr[start2]){\r\n            ++start;\r\n        } else {\r\n            var value = arr[start2];\r\n            var index = start2;\r\n            while(index != start) {\r\n                arr[index] = arr[index - 1];\r\n                steps.push(['s',index,index - 1]);\r\n                --index;\r\n            }\r\n            arr[start] = value;\r\n\r\n            ++start;\r\n            ++mid;\r\n            ++start2;\r\n        }\r\n    }\r\n}","// MergeSort\r\n\r\nexport default function MergeSortPut(arr, setSteps, setStepsCounter, setTotalSteps) {\r\n\t//IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n\t//YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n\tlet copy = [...arr];\r\n\t//var stepsCounter = 0;\r\n\tvar steps = [];\r\n\r\n\tmergeSort(copy, 0, steps);\r\n\r\n\r\n\t//console.log(steps);\r\n\tsetSteps(steps);\r\n\tsetStepsCounter(steps.length);\r\n\tsetTotalSteps(steps.length);\r\n}\r\n\r\nfunction merge(left, right, location, steps) {\r\n\tvar res = [];\r\n\tvar i = 0, j = 0;\r\n\r\n\twhile (true) {\r\n\t\tif (i >= left.length) {\r\n\t\t\t// [\"instruction\", index, toPut]\r\n\t\t\t// \"pa2\" stands for \"put array 2\"\r\n\t\t\t// put the array toPut at index,\r\n\t\t\t// overwriting what is there without increasing original array length\r\n\t\t\tsteps.push([\"pa2\", res.length + location, right.slice(j)]);\r\n\t\t\tres.push(...right.slice(j));\r\n\t\t\tbreak;\r\n\t\t} else if (j >= right.length) {\r\n\t\t\tsteps.push([\"pa2\", res.length + location, left.slice(i)]);\r\n\t\t\tres.push(...left.slice(i));\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (left[i] < right[j]) {\r\n\t\t\t// [\"instruction\", index, toPut]\r\n\t\t\t// \"p2\" stands for \"put 2\"\r\n\t\t\t// put what is at toPut at the index of heightsBottom \r\n\t\t\tsteps.push([\"p2\", res.length + location, left[i]]);\r\n\t\t\tres.push(left[i]);\r\n\t\t\t++i;\r\n\t\t} else {\r\n\t\t\tsteps.push([\"p2\", res.length + location, right[j]]);\r\n\t\t\tres.push(right[j]);\r\n\t\t\t++j;\r\n\t\t}\r\n\r\n\t}\r\n\t// put the whole sorted array into the original data\r\n\tsteps.push([\"pa\", location, res]);\r\n\treturn res;\r\n}\r\n\r\n//range is [start,end)\r\nfunction mergeSort(arr, location, steps) {\r\n\t//console.log({ arr });\r\n\tif (arr.length == 1 || arr.length == 0) {\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tvar mid = Math.floor((0 + arr.length) / 2);\r\n\tvar left = mergeSort(arr.slice(0, mid), location, steps);\r\n\tvar right = mergeSort(arr.slice(mid, arr.length), location+mid, steps);\r\n\r\n\treturn merge(left, right, location, steps);\r\n}","import React, { useEffect } from 'react';\n// import logo from './logo.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport './App.css';\n\nimport Rectangle from './Rectangle.js';\nimport SingleSelect from './SingleSelect.js';\nimport CreateRectangles from './CreateRectangles.js';\n\nimport BubbleSort from './BubbleSort.js';\nimport MergeSortSwitch from './MergeSortSwitch.js';\nimport MergeSortPut from './MergeSortPut.js';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: '#86C232',\n\t\t\tmain: '#86C232',\n\t\t\tdark: '#86C232',\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: '#474B4F',\n\t\t\tmain: '#474B4F',\n\t\t\tdark: '#474B4F',\n\t\t}\n\t},\n\n})\n\nfunction getData(rectNum, maxRectHeight) {\n\tvar res = [];\n\tfor (var i = 0; i < rectNum; ++i) {\n\t\tres.push(1 + Math.round(Math.random() * maxRectHeight));\n\t}\n\t//console.log(res);\n\treturn res;\n}\n\n\n// Goal: To create a visual realization of sorting algorithms.\n// Create rectangles as data points.\n// 1. Line up rectangles at the bottom\n// 2. The heights of rectangles is based on their data\n// 3. Using whatever sorting algorithm, show step by step how the data transforms\n\nfunction App() {\n\n\tconst useStyles = makeStyles(theme => ({\n\t\tbutton: {\n\t\t\tbackground: '#86C232',\n\t\t\tmargin: \"5px\",\n\t\t\tcolor: \"white\",\n\t\t}\n\t}));\n\n\twindow.addEventListener(\"resize\", updateWidth);\n\n\t//const maxWidth = 1200;\n\tvar maxData = 200;\n\tconst [maxWidth, setMaxWidth] = React.useState(window.innerWidth * 0.7);\n\n\n\t// filters\n\tconst [sortType, setSortType] = React.useState(\"MergeSort(Put)\");\n\tconst [rectNum, setRectNum] = React.useState(10);\n\tconst [speed, setSpeed] = React.useState(100);\n\n\t// data tracking\n\tconst [data, setData] = React.useState(getData(rectNum, maxData));\n\tconst [dataBottom, setDataBottom] = React.useState(new Array(rectNum).fill(0));\n\tconst [steps, setSteps] = React.useState([]);\n\tconst [totalSteps, setTotalSteps] = React.useState(0);\n\tconst [stepsCounter, setStepsCounter] = React.useState(0);\n\tconst [lightUp, setLightUp] = React.useState([]);\n\tconst [lightUpBottom, setLightUpBottom] = React.useState([]);\n\tconst [sorting, setSorting] = React.useState(false);\n\n\n\tfunction updateWidth() {\n\t\tsetMaxWidth(window.innerWidth * 0.7);\n\t}\n\n\tfunction reset(){\n\t\tsetSorting(false);\n\t\tsetDataBottom(new Array(rectNum).fill(0));\n\t\tsetLightUp([]);\n\t\tsetLightUpBottom([]);\n\t}\n\n\tfunction timer() {\n\t\t// console.log(steps);\n\t\t// console.log(totalSteps);\n\t\t// console.log(stepsCounter);\n\n\t\tlet index = totalSteps - stepsCounter;\n\t\tlet instruction = steps[index][0];\n\t\tlet copyData = [...data]\n\t\tlet copyDataBottom = [...dataBottom]\n\n\t\tif (instruction == 's') {\n\t\t\t// Switch:\n\t\t\t// [\"instruction\", index1, index2]\n\t\t\t// Switch what is at index1 with index2\n\t\t\tlet a = steps[index][1];\n\t\t\tlet b = steps[index][2];\n\n\t\t\tlet tmp = copyData[a];\n\t\t\tcopyData[a] = copyData[b];\n\t\t\tcopyData[b] = tmp;\n\n\t\t\tsetLightUp([a, b]);\n\t\t} else if (instruction == 'p') {\n\t\t\t// Put:\n\t\t\t// [\"instruction\", index, toPut]\n\t\t\t// Put what is toPut at index, replacing old element\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyData[location] = toPut;\n\n\t\t\tsetLightUp([location]);\n\t\t} else if (instruction == 'p2') {\n\t\t\t// Put Bottom:\n\t\t\t// [\"instruction\", index, toPut]\n\t\t\t// Put what is toPut at second graph's index, replacing old element\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyDataBottom[location] = toPut;\n\t\t\tsetLightUpBottom([location]);\n\t\t} else if (instruction == 'pa') {\n\t\t\t// Put Array:\n\t\t\t// [\"instruction\", index, toPut[]]\n\t\t\t// Put what is toPut[] at index, replacing old elements\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyData = [\n\t\t\t\t...copyData.slice(0,location),\n\t\t\t\t...toPut,\n\t\t\t\t...copyData.slice(location + toPut.length)\n\t\t\t];\n\t\t\t\n\t\t\t// generate an array from starting location with length identical to toPut\n\t\t\tlet toLightUp = Array(toPut.length).fill(location).map((x, y) => x + y);\n\t\t\tsetLightUp(toLightUp);\n\t\t} else if (instruction == 'pa2') {\n\t\t\t// Put Bottom Array:\n\t\t\t// [\"instruction\", index, toPut[]]\n\t\t\t// Put what is toPut[] at second graph's index, replacing old elements\n\t\t\tlet location = steps[index][1];\n\t\t\tlet toPut = steps[index][2];\n\n\t\t\tcopyDataBottom = [\n\t\t\t\t...copyDataBottom.slice(0,location),\n\t\t\t\t...toPut,\n\t\t\t\t...copyDataBottom.slice(location + toPut.length)\n\t\t\t];\n\t\t\t\n\t\t\tlet toLightUp = Array(toPut.length).fill(location).map((x, y) => x + y);\n\t\t\tsetLightUpBottom(toLightUp);\n\t\t}\n\n\n\t\tsetData(copyData);\n\t\tsetDataBottom(copyDataBottom);\n\t\tsetStepsCounter(stepsCounter - 1);\n\t};\n\n\tuseEffect(() => {\n\t\tif (stepsCounter <= 0 || !sorting) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = setInterval(timer, speed);\n\t\treturn () => clearInterval(id);\n\t},\n\t\t[stepsCounter, sorting]\n\t);\n\n\tuseEffect(() => {\n\t\tsetData(getData(rectNum, maxData));\n\t},\n\t\t[rectNum]\n\t);\n\n\tfunction Sort(heights, setSteps, setStepsCounter, setTotalSteps) {\n\t\tsetSorting(true);\n\t\tif (sortType == \"BubbleSort\") {\n\t\t\tBubbleSort(heights, setSteps, setStepsCounter, setTotalSteps);\n\t\t} else if (sortType == \"MergeSort(Switch)\") {\n\t\t\tMergeSortSwitch(heights, setSteps, setStepsCounter, setTotalSteps);\n\t\t} else if (sortType == \"MergeSort(Put)\") {\n\t\t\tMergeSortPut(heights, setSteps, setStepsCounter, setTotalSteps);\n\t\t}\n\t}\n\n\tconst classes = useStyles();\n\treturn (\n\t\t<MuiThemeProvider theme={theme}>\n\n\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"App-header\">\n\t\t\t\t\t{/* {JSON.stringify(maxWidth)} */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={() => { reset(); setData(getData(rectNum, maxData)); }}\n\t\t\t\t\t>\n\t\t\t\t\t\tRandomize\n          </Button>\n\t\t\t\t\t<SingleSelect\n\t\t\t\t\t\ttitle={\"Type of Sort\"}\n\t\t\t\t\t\titems={[\"BubbleSort\", \"MergeSort(Switch)\", \"MergeSort(Put)\", \"HeapSort\"]}\n\t\t\t\t\t\tvalue={sortType}\n\t\t\t\t\t\tonChange={(sortType) => { reset(); setSortType(sortType); }}\n\t\t\t\t\t/>\n\t\t\t\t\t<SingleSelect\n\t\t\t\t\t\ttitle={\"Data Points\"}\n\t\t\t\t\t\titems={[10, 25, 50, 100]}\n\t\t\t\t\t\tvalue={rectNum}\n\t\t\t\t\t\tonChange={(rectNum) => { reset(); setRectNum(rectNum); }}\n\t\t\t\t\t/>\n\t\t\t\t\t<SingleSelect\n\t\t\t\t\t\ttitle={\"Speed(ms)\"}\n\t\t\t\t\t\titems={[1, 50, 100, 500]}\n\t\t\t\t\t\tvalue={speed}\n\t\t\t\t\t\tonChange={(speed) => { reset(); setSpeed(speed); }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={() => Sort(data, setSteps, setStepsCounter, setTotalSteps)}\n\t\t\t\t\t>\n\t\t\t\t\t\tSort\n          </Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"App-main\">\n\t\t\t\t\t{/* <Clock></Clock> */}\n\t\t\t\t\t<CreateRectangles\n\t\t\t\t\t\trectNum={rectNum}\n\t\t\t\t\t\tmaxWidth={maxWidth}\n\t\t\t\t\t\theights={data}\n\t\t\t\t\t\tlightUp={lightUp}\n\t\t\t\t\t>\n\t\t\t\t\t</CreateRectangles>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"App-main\">\n\t\t\t\t\t{/* <Clock></Clock> */}\n\t\t\t\t\t<CreateRectangles\n\t\t\t\t\t\trectNum={rectNum}\n\t\t\t\t\t\tmaxWidth={maxWidth}\n\t\t\t\t\t\theights={dataBottom}\n\t\t\t\t\t\tlightUp={lightUpBottom}\n\t\t\t\t\t>\n\t\t\t\t\t</CreateRectangles>\n\n\t\t\t\t</div>\n\t\t\t\t{/* {JSON.stringify(heights)} */}\n\n\n\t\t\t</div>\n\n\t\t</MuiThemeProvider>\n\t);\n}\n\nexport default App;\n","// BubbleSort\r\n\r\nexport default function BubbleSort(arr, setSteps, setStepsCounter, setTotalSteps){\r\n    //IT IS CRUCIAL TO MAKE A COPY HERE!!!\r\n    //YOU CANNOT MANIPULATE THE ORIGINAL ARRAY!!!\r\n    let copy = [...arr];\r\n\r\n    //var stepsCounter = 0;\r\n    var steps = [];\r\n\r\n    for(var j = 0; j < copy.length - 1;++j){\r\n        for(var i = 0; i < copy.length-1-j; ++i){\r\n            if(copy[i] > copy[i+1]){\r\n                var tmp = copy[i];\r\n                copy[i] = copy[i+1];\r\n                copy[i+1] = tmp;\r\n                \r\n                //++stepsCounter;\r\n                steps.push(['s',i,i+1]);\r\n\r\n            }\r\n        }\r\n    }\r\n    //console.log(copy);\r\n    setSteps(steps);\r\n    setStepsCounter(steps.length);\r\n    setTotalSteps(steps.length);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}